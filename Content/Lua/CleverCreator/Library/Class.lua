---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Song.
--- DateTime: 2019/1/22 10:23
---

---@type table<string, @class>
Classes = {}

---@param name string
---@param super string
function class(name, super)
    local _class = Classes[name];
    if _class then
        error('Has define class:'..name)
        return
    end

    _class = {}
    _class._name = name
    Classes[name] = _class

    --继承
    local _index = nil
    local _super = Classes[super]
    if _super then
        _class.super = _super
        _index = function(_, _key)
            if _.super then
                local func = _.super[_key]
                if func and type(func) == 'function' then
                    return func
                end
            end
        end
        _index = _super
    end

    --实例化
    local _call = function(_, ...)
        local _object = {}

        setmetatable(_object, {__index = _})

        if _object then
            _object.ctor(_object, ...)
        end

        return _object
    end

    setmetatable(_class, {__index = _index, __call = _call})

    return _class
end

--克隆表
function clone(object)
    local lookup_table = {}
    local function _copy(object)
        if type(object) ~= "table" then
            return object
        elseif lookup_table[object] then
            return lookup_table[object]
        end
        local newObject = {}
        lookup_table[object] = newObject
        for key, value in pairs(object) do
            newObject[_copy(key)] = _copy(value)
        end
        return setmetatable(newObject, getmetatable(object))
    end
    return _copy(object)
end